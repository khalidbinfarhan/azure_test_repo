{
	"name": "conditional",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "employeedataset",
						"type": "DatasetReference"
					},
					"name": "AllEmployees"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "destinationDataSet",
						"type": "DatasetReference"
					},
					"name": "ITEmployee"
				},
				{
					"dataset": {
						"referenceName": "destinationDataSet",
						"type": "DatasetReference"
					},
					"name": "HREmployee"
				},
				{
					"dataset": {
						"referenceName": "destinationDataSet",
						"type": "DatasetReference"
					},
					"name": "PayrollEmployees"
				}
			],
			"transformations": [
				{
					"name": "splitbasedondept"
				}
			],
			"scriptLines": [
				"source(output(",
				"          empid as string,",
				"          Name as string,",
				"          salary as string,",
				"          department as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> AllEmployees",
				"AllEmployees split(equals(department, '1'),",
				"     equals(department, '2'),",
				"     equals(department, '3'),",
				"     disjoint: false) ~> splitbasedondept@(ITEmployees, HREmployees, PayrollEmployees)",
				"splitbasedondept@ITEmployees sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          Column_1 as string,",
				"          Column_2 as string,",
				"          Column_3 as string,",
				"          Column_4 as string",
				"     ),",
				"     partitionFileNames:['ITEmployees.csv'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> ITEmployee",
				"splitbasedondept@HREmployees sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          Column_1 as string,",
				"          Column_2 as string,",
				"          Column_3 as string,",
				"          Column_4 as string",
				"     ),",
				"     partitionFileNames:['HREmployees.csv'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> HREmployee",
				"splitbasedondept@PayrollEmployees sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          Column_1 as string,",
				"          Column_2 as string,",
				"          Column_3 as string,",
				"          Column_4 as string",
				"     ),",
				"     partitionFileNames:['Payroll.csv'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> PayrollEmployees"
			]
		}
	}
}